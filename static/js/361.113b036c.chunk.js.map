{"version":3,"file":"static/js/361.113b036c.chunk.js","mappings":"yJAAO,MAaMA,EAAkBA,KAC7B,MAAMC,EAAQC,aAAaC,QAAQ,SACnC,OAAOF,GAVkBA,KACzB,IACE,OAAOG,KAAKC,MAAMC,KAAKL,GACzB,CAAE,MAAOM,GACP,OAAO,IACT,GAKgBC,CAAWP,EAAM,E,sBCVnC,MAmDA,EAnDkBQ,KAChB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KACnC,QAAEG,IAAYC,EAAAA,EAAAA,KACdC,GAAWC,EAAAA,EAAAA,MAqBjB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACHpB,KACCqB,EAAAA,EAAAA,KAAA,UAAQC,QAVOC,KACnBrB,aAAasB,WAAW,SACxBT,EAAQ,MACRU,MAAM,aAAa,EAOeL,SAAC,YAE/BD,EAAAA,EAAAA,MAAAO,EAAAA,SAAA,CAAAN,SAAA,EACEC,EAAAA,EAAAA,KAAA,SACEM,KAAK,QACLC,MAAOlB,EACPmB,SAAWC,GAAMnB,EAASmB,EAAEC,OAAOH,OACnCI,YAAY,iBAEdX,EAAAA,EAAAA,KAAA,SACEM,KAAK,WACLC,MAAOf,EACPgB,SAAWC,GAAMhB,EAAYgB,EAAEC,OAAOH,OACtCI,YAAY,oBAEdX,EAAAA,EAAAA,KAAA,UAAQC,QAtCIW,KAElB,GAAc,qBAAVvB,GAA6C,gBAAbG,EAA4B,CAC9D,MAAMZ,GDdkBiC,ECcI,CAAExB,SDZ3ByB,KAAK/B,KAAKgC,UAAUF,KCavBhC,aAAamC,QAAQ,QAASpC,GAC9Bc,EAAQ,CAAEL,UACVe,MAAM,oBACNR,EAAS,IACX,MACEQ,MAAM,uBDpBkBS,KCqB1B,EA4BmCd,SAAC,eAG9B,C","sources":["utils/auth.js","pages/LoginPage.jsx"],"sourcesContent":["export const generateToken = (user) => {\r\n  // Simulasi pembuatan token (bukan implementasi nyata)\r\n  return btoa(JSON.stringify(user));\r\n};\r\n\r\nexport const parseToken = (token) => {\r\n  try {\r\n    return JSON.parse(atob(token));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return token && parseToken(token);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useAppContext } from \"../context/AppContext\";\r\nimport { generateToken, isAuthenticated } from \"../utils/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { setUser } = useAppContext();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = () => {\r\n    // Dummy login validation\r\n    if (email === \"user@example.com\" && password === \"password123\") {\r\n      const token = generateToken({ email });\r\n      localStorage.setItem(\"token\", token);\r\n      setUser({ email });\r\n      alert(\"Login successful\");\r\n      navigate(\"/\");\r\n    } else {\r\n      alert(\"Invalid credentials\");\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setUser(null);\r\n    alert(\"Logged out\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      {isAuthenticated() ? (\r\n        <button onClick={handleLogout}>Logout</button>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Enter email\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"Enter password\"\r\n          />\r\n          <button onClick={handleLogin}>Login</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["isAuthenticated","token","localStorage","getItem","JSON","parse","atob","error","parseToken","LoginPage","email","setEmail","useState","password","setPassword","setUser","useAppContext","navigate","useNavigate","_jsxs","children","_jsx","onClick","handleLogout","removeItem","alert","_Fragment","type","value","onChange","e","target","placeholder","handleLogin","user","btoa","stringify","setItem"],"sourceRoot":""}